// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`eslint-config should properly extend parent rules 1`] = `"node_modules/@typescript-eslint/parser/dist/parser.js"`;

exports[`eslint-config should properly extend parent rules 2`] = `
Array [
  "node_modules/eslint-config-airbnb-base/rules/best-practices.js",
  "node_modules/eslint-config-airbnb-base/rules/errors.js",
  "node_modules/eslint-config-airbnb-base/rules/node.js",
  "node_modules/eslint-config-airbnb-base/rules/style.js",
  "node_modules/eslint-config-airbnb-base/rules/variables.js",
  "node_modules/eslint-config-airbnb-base/rules/es6.js",
  "node_modules/eslint-config-airbnb-base/rules/imports.js",
  "airbnb-base",
  "prettier",
  "@dc0de/eslint-config-base",
]
`;

exports[`eslint-config should properly extend parent rules 3`] = `
Object {
  "env": Object {
    "es6": true,
    "node": true,
  },
  "globals": Object {
    "Array": false,
    "ArrayBuffer": false,
    "Boolean": false,
    "Buffer": false,
    "DataView": false,
    "Date": false,
    "Error": false,
    "EvalError": false,
    "Float32Array": false,
    "Float64Array": false,
    "Function": false,
    "Infinity": false,
    "Int16Array": false,
    "Int32Array": false,
    "Int8Array": false,
    "Intl": false,
    "JSON": false,
    "Map": false,
    "Math": false,
    "NaN": false,
    "Number": false,
    "Object": false,
    "Promise": false,
    "Proxy": false,
    "RangeError": false,
    "ReferenceError": false,
    "Reflect": false,
    "RegExp": false,
    "Set": false,
    "String": false,
    "Symbol": false,
    "SyntaxError": false,
    "TextDecoder": false,
    "TextEncoder": false,
    "TypeError": false,
    "URIError": false,
    "URL": false,
    "URLSearchParams": false,
    "Uint16Array": false,
    "Uint32Array": false,
    "Uint8Array": false,
    "Uint8ClampedArray": false,
    "WeakMap": false,
    "WeakSet": false,
    "__dirname": false,
    "__filename": false,
    "clearImmediate": false,
    "clearInterval": false,
    "clearTimeout": false,
    "console": false,
    "constructor": false,
    "decodeURI": false,
    "decodeURIComponent": false,
    "encodeURI": false,
    "encodeURIComponent": false,
    "escape": false,
    "eval": false,
    "exports": true,
    "global": false,
    "hasOwnProperty": false,
    "isFinite": false,
    "isNaN": false,
    "isPrototypeOf": false,
    "module": false,
    "parseFloat": false,
    "parseInt": false,
    "process": false,
    "propertyIsEnumerable": false,
    "queueMicrotask": false,
    "require": false,
    "setImmediate": false,
    "setInterval": false,
    "setTimeout": false,
    "toLocaleString": false,
    "toString": false,
    "undefined": false,
    "unescape": false,
    "valueOf": false,
  },
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "generators": false,
      "globalReturn": true,
      "objectLiteralDuplicateProperties": false,
    },
    "ecmaVersion": 2018,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": Array [
    "import",
    "@typescript-eslint",
  ],
  "rules": Object {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": Array [
      "error",
      "generic",
    ],
    "@typescript-eslint/ban-types": Array [
      "error",
      Object {
        "types": Object {
          "Boolean": Object {
            "fixWith": "boolean",
            "message": "Use boolean instead",
          },
          "Number": Object {
            "fixWith": "number",
            "message": "Use number instead",
          },
          "Object": Object {
            "fixWith": "object",
            "message": "Use object instead",
          },
          "String": Object {
            "fixWith": "string",
            "message": "Use string instead",
          },
          "Symbol": Object {
            "fixWith": "symbol",
            "message": "Use symbol instead",
          },
        },
      },
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [],
        "ignoreDestructuring": false,
        "properties": "always",
      },
    ],
    "@typescript-eslint/class-name-casing": "error",
    "@typescript-eslint/explicit-function-return-type": Array [
      "error",
      Object {
        "allowExpressions": true,
      },
    ],
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/generic-type-naming": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/interface-name-prefix": Array [
      "error",
      "never",
    ],
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/member-naming": "off",
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/no-angle-bracket-type-assertion": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
      Object {
        "allowConstructorOnly": false,
        "allowEmpty": false,
        "allowStaticOnly": false,
      },
    ],
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-inferrable-types": Array [
      "error",
      Object {
        "ignoreParameters": true,
        "ignoreProperties": false,
      },
    ],
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": Array [
      "error",
      Object {
        "allowDeclarations": false,
        "allowDefinitionFiles": true,
      },
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-object-literal-type-assertion": Array [
      "off",
      Object {},
    ],
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": Array [
      "error",
      Object {
        "allowDestructuring": true,
        "allowedNames": Array [],
      },
    ],
    "@typescript-eslint/no-triple-slash-reference": "error",
    "@typescript-eslint/no-type-alias": Array [
      "off",
      Object {},
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": Array [
      "off",
      Object {},
    ],
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "functions": false,
        "typedefs": true,
        "variables": true,
      },
    ],
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-interface": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/promise-function-async": Array [
      "off",
      Object {
        "allowedPromiseNames": Array [],
        "checkArrowFunctions": true,
        "checkFunctionDeclarations": true,
        "checkFunctionExpressions": true,
        "checkMethodDeclarations": true,
      },
    ],
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/type-annotation-spacing": "off",
    "accessor-pairs": "off",
    "array-bracket-newline": Array [
      "off",
      "consistent",
    ],
    "array-bracket-spacing": Array [
      "off",
      "never",
    ],
    "array-callback-return": Array [
      "off",
      Object {},
    ],
    "array-element-newline": Array [
      "off",
      Object {
        "minItems": 3,
        "multiline": true,
      },
    ],
    "arrow-body-style": Array [
      "error",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "off",
      "as-needed",
      Object {
        "requireForBlockBody": true,
      },
    ],
    "arrow-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": "error",
    "block-spacing": Array [
      "off",
      "always",
    ],
    "brace-style": Array [
      "off",
      "1tbs",
      Object {
        "allowSingleLine": true,
      },
    ],
    "callback-return": "off",
    "camelcase": Array [
      "off",
      Object {},
    ],
    "capitalized-comments": Array [
      "off",
      "never",
      Object {
        "block": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
        "line": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
      },
    ],
    "class-methods-use-this": Array [
      "off",
      Object {},
    ],
    "comma-dangle": Array [
      "off",
      Object {
        "arrays": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline",
        "imports": "always-multiline",
        "objects": "always-multiline",
      },
    ],
    "comma-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": Array [
      "off",
      "last",
      Object {
        "exceptions": Object {
          "ArrayExpression": false,
          "ArrayPattern": false,
          "ArrowFunctionExpression": false,
          "CallExpression": false,
          "FunctionDeclaration": false,
          "FunctionExpression": false,
          "ImportDeclaration": false,
          "NewExpression": false,
          "ObjectExpression": false,
          "ObjectPattern": false,
          "VariableDeclaration": false,
        },
      },
    ],
    "complexity": Array [
      "off",
      11,
    ],
    "computed-property-spacing": Array [
      "off",
      "never",
    ],
    "consistent-return": "off",
    "consistent-this": "off",
    "constructor-super": "error",
    "curly": Array [
      "error",
      "all",
    ],
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "dot-location": Array [
      "off",
      "property",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "off",
      "always",
    ],
    "eqeqeq": Array [
      "error",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": "error",
    "func-call-spacing": Array [
      "off",
      "never",
    ],
    "func-name-matching": Array [
      "off",
      "always",
      Object {
        "includeCommonJSModuleExports": false,
      },
    ],
    "func-names": Array [
      "error",
      "always",
    ],
    "func-style": Array [
      "off",
      "expression",
    ],
    "function-paren-newline": Array [
      "off",
      "consistent",
    ],
    "generator-star": "off",
    "generator-star-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "global-require": "error",
    "guard-for-in": "error",
    "handle-callback-err": "off",
    "id-blacklist": "off",
    "id-length": "off",
    "id-match": "off",
    "implicit-arrow-linebreak": Array [
      "off",
      "beside",
    ],
    "import/default": "off",
    "import/dynamic-import-chunkname": Array [
      "off",
      Object {
        "importFunctions": Array [],
        "webpackChunknameFormat": "[0-9a-zA-Z-_/.]+",
      },
    ],
    "import/export": "off",
    "import/exports-last": "off",
    "import/extensions": Array [
      "off",
      "always",
      Object {},
    ],
    "import/first": Array [
      "off",
      "absolute-first",
    ],
    "import/group-exports": "off",
    "import/imports-first": "off",
    "import/max-dependencies": Array [
      "off",
      Object {
        "max": 10,
      },
    ],
    "import/named": "off",
    "import/namespace": "off",
    "import/newline-after-import": "off",
    "import/no-absolute-path": "error",
    "import/no-amd": "error",
    "import/no-anonymous-default-export": Array [
      "off",
      Object {
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowArray": false,
        "allowArrowFunction": false,
        "allowLiteral": false,
        "allowObject": false,
      },
    ],
    "import/no-commonjs": "off",
    "import/no-cycle": Array [
      "off",
      Object {},
    ],
    "import/no-default-export": "off",
    "import/no-deprecated": "off",
    "import/no-duplicates": "off",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies": Array [
      "off",
      Object {},
    ],
    "import/no-internal-modules": Array [
      "off",
      Object {
        "allow": Array [],
      },
    ],
    "import/no-mutable-exports": "error",
    "import/no-named-as-default": "off",
    "import/no-named-as-default-member": "off",
    "import/no-named-default": "error",
    "import/no-namespace": "off",
    "import/no-nodejs-modules": "off",
    "import/no-relative-parent-imports": "off",
    "import/no-restricted-paths": "off",
    "import/no-self-import": "error",
    "import/no-unassigned-import": "off",
    "import/no-unresolved": Array [
      "off",
      Object {},
    ],
    "import/no-useless-path-segments": "error",
    "import/no-webpack-loader-syntax": "error",
    "import/order": Array [
      "off",
      Object {
        "groups": Array [
          Array [
            "builtin",
            "external",
            "internal",
          ],
        ],
      },
    ],
    "import/prefer-default-export": "off",
    "import/unambiguous": "off",
    "indent": Array [
      "off",
      2,
      Object {
        "ArrayExpression": 1,
        "CallExpression": Object {
          "arguments": 1,
        },
        "FunctionDeclaration": Object {
          "body": 1,
          "parameters": 1,
        },
        "FunctionExpression": Object {
          "body": 1,
          "parameters": 1,
        },
        "ImportDeclaration": 1,
        "ObjectExpression": 1,
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "ignoredNodes": Array [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild",
        ],
        "outerIIFEBody": 1,
      },
    ],
    "indent-legacy": "off",
    "init-declarations": "off",
    "jsx-quotes": Array [
      "off",
      "prefer-double",
    ],
    "key-spacing": Array [
      "off",
      Object {
        "afterColon": true,
        "beforeColon": false,
      },
    ],
    "keyword-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": true,
        "overrides": Object {
          "case": Object {
            "after": true,
            "before": true,
          },
          "return": Object {
            "after": true,
            "before": true,
          },
          "throw": Object {
            "after": true,
            "before": true,
          },
        },
      },
    ],
    "line-comment-position": Array [
      "off",
      Object {
        "applyDefaultPatterns": true,
        "ignorePattern": "",
        "position": "above",
      },
    ],
    "linebreak-style": Array [
      "off",
      "unix",
    ],
    "lines-around-comment": 0,
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "off",
      1,
    ],
    "max-depth": Array [
      "off",
      4,
    ],
    "max-len": Array [
      0,
      100,
      2,
      Object {
        "code": 80,
        "ignoreComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreTrailingComments": false,
        "ignoreUrls": true,
        "tabWidth": 4,
      },
    ],
    "max-lines": Array [
      "off",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
      Object {
        "IIFEs": true,
        "max": 50,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-nested-callbacks": "off",
    "max-params": Array [
      "off",
      3,
    ],
    "max-statements": Array [
      "off",
      10,
    ],
    "max-statements-per-line": Array [
      "off",
      Object {
        "max": 1,
      },
    ],
    "multiline-comment-style": Array [
      "off",
      "starred-block",
    ],
    "multiline-ternary": Array [
      "off",
      "never",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": "off",
    "newline-after-var": "off",
    "newline-before-return": "off",
    "newline-per-chained-call": Array [
      "off",
      Object {
        "ignoreChainWithDepth": 4,
      },
    ],
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-arrow-condition": "off",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-catch-shadow": "off",
    "no-class-assign": "error",
    "no-comma-dangle": "off",
    "no-compare-neg-zero": "error",
    "no-cond-assign": Array [
      "error",
      "except-parens",
    ],
    "no-confusing-arrow": Array [
      0,
      Object {
        "allowParens": true,
      },
    ],
    "no-console": "error",
    "no-const-assign": "error",
    "no-constant-condition": "error",
    "no-continue": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-div-regex": "off",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": Array [
      "error",
      Object {
        "includeExports": true,
      },
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
      Object {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": "error",
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": "error",
    "no-eq-null": "off",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-parens": Array [
      "off",
      "all",
      Object {
        "conditionalAssign": true,
        "enforceForArrowConditionals": false,
        "ignoreJSX": "all",
        "nestedBinaryExpressions": false,
        "returnAssign": false,
      },
    ],
    "no-extra-semi": "off",
    "no-fallthrough": "error",
    "no-floating-decimal": "off",
    "no-func-assign": "error",
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "off",
      Object {
        "allow": Array [],
        "boolean": false,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": "off",
    "no-implied-eval": "error",
    "no-inline-comments": "off",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-magic-numbers": Array [
      "off",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": "error",
    "no-mixed-operators": Array [
      0,
      Object {
        "allowSamePrecedence": false,
        "groups": Array [
          Array [
            "%",
            "**",
          ],
          Array [
            "%",
            "+",
          ],
          Array [
            "%",
            "-",
          ],
          Array [
            "%",
            "*",
          ],
          Array [
            "%",
            "/",
          ],
          Array [
            "**",
            "+",
          ],
          Array [
            "**",
            "-",
          ],
          Array [
            "**",
            "*",
          ],
          Array [
            "**",
            "/",
          ],
          Array [
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            ">>>",
          ],
          Array [
            "==",
            "!=",
            "===",
            "!==",
            ">",
            ">=",
            "<",
            "<=",
          ],
          Array [
            "&&",
            "||",
          ],
          Array [
            "in",
            "instanceof",
          ],
        ],
      },
    ],
    "no-mixed-requires": Array [
      "off",
      false,
    ],
    "no-mixed-spaces-and-tabs": "off",
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-spaces": Array [
      "off",
      Object {
        "ignoreEOLComments": false,
      },
    ],
    "no-multi-str": "off",
    "no-multiple-empty-lines": Array [
      "off",
      Object {
        "max": 2,
        "maxEOF": 0,
      },
    ],
    "no-native-reassign": "off",
    "no-negated-condition": "off",
    "no-negated-in-lhs": "off",
    "no-nested-ternary": "off",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-require": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": Array [
      "error",
      Object {
        "ignorePropertyModificationsFor": Array [
          "acc",
          "accumulator",
          "e",
          "ctx",
          "req",
          "request",
          "res",
          "response",
          "$scope",
        ],
        "props": true,
      },
    ],
    "no-path-concat": "error",
    "no-plusplus": Array [
      "off",
      Object {},
    ],
    "no-process-env": "off",
    "no-process-exit": "off",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-reserved-keys": "off",
    "no-restricted-globals": Array [
      "off",
      Object {},
    ],
    "no-restricted-imports": Array [
      "off",
      Object {
        "paths": Array [],
        "patterns": Array [],
      },
    ],
    "no-restricted-modules": "off",
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": "error",
    "no-shadow-restricted-names": "error",
    "no-space-before-semi": "off",
    "no-spaced-func": "off",
    "no-sparse-arrays": "error",
    "no-sync": "off",
    "no-tabs": 0,
    "no-template-curly-in-string": "error",
    "no-ternary": "off",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": Array [
      "off",
      Object {
        "ignoreComments": false,
        "skipBlankLines": false,
      },
    ],
    "no-undef": "off",
    "no-undef-init": "error",
    "no-undefined": "off",
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "enforceInMethodNames": false,
      },
    ],
    "no-unexpected-multiline": 0,
    "no-unmodified-loop-condition": "off",
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-vars": Array [
      "off",
      Object {},
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "functions": false,
      },
    ],
    "no-useless-call": "off",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "off",
    "no-useless-escape": "error",
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": Array [
      "warn",
      Object {
        "location": "anywhere",
        "terms": Array [
          "todo",
          "fixme",
        ],
      },
    ],
    "no-whitespace-before-property": "off",
    "no-with": "error",
    "no-wrap-func": "off",
    "nonblock-statement-body-position": Array [
      "off",
      "beside",
      Object {
        "overrides": Object {},
      },
    ],
    "object-curly-newline": Array [
      "off",
      Object {
        "ExportDeclaration": Object {
          "consistent": true,
          "minProperties": 4,
          "multiline": true,
        },
        "ImportDeclaration": Object {
          "consistent": true,
          "minProperties": 4,
          "multiline": true,
        },
        "ObjectExpression": Object {
          "consistent": true,
          "minProperties": 4,
          "multiline": true,
        },
        "ObjectPattern": Object {
          "consistent": true,
          "minProperties": 4,
          "multiline": true,
        },
      },
    ],
    "object-curly-spacing": Array [
      "off",
      "always",
    ],
    "object-property-newline": Array [
      "off",
      Object {
        "allowAllPropertiesOnSameLine": true,
        "allowMultiplePropertiesPerLine": false,
      },
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "off",
      "always",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "off",
      "before",
      Object {
        "overrides": Object {
          "=": "none",
        },
      },
    ],
    "padded-blocks": Array [
      "off",
      Object {
        "blocks": "never",
        "classes": "never",
        "switches": "never",
      },
    ],
    "padding-line-between-statements": Array [
      "error",
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "import",
      },
      Object {
        "blankLine": "any",
        "next": "import",
        "prev": "import",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "any",
        "next": Array [
          "const",
          "let",
          "var",
        ],
        "prev": Array [
          "const",
          "let",
          "var",
        ],
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "cjs-import",
      },
      Object {
        "blankLine": "never",
        "next": "cjs-import",
        "prev": "cjs-import",
      },
      Object {
        "blankLine": "always",
        "next": "cjs-export",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "cjs-export",
      },
      Object {
        "blankLine": "any",
        "next": "cjs-export",
        "prev": "cjs-export",
      },
      Object {
        "blankLine": "always",
        "next": "export",
        "prev": "*",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": "export",
      },
      Object {
        "blankLine": "any",
        "next": "export",
        "prev": "export",
      },
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
      Object {
        "blankLine": "never",
        "next": "*",
        "prev": "return",
      },
      Object {
        "blankLine": "always",
        "next": "*",
        "prev": Array [
          "block-like",
          "class",
        ],
      },
    ],
    "prefer-arrow-callback": Array [
      "error",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": true,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": Array [
      "error",
      Object {
        "allowEmptyReject": true,
      },
    ],
    "prefer-reflect": "off",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "quote-props": Array [
      "off",
      "as-needed",
      Object {
        "keywords": false,
        "numbers": false,
        "unnecessary": true,
      },
    ],
    "quotes": Array [
      0,
      "single",
      Object {
        "avoidEscape": true,
      },
    ],
    "radix": "error",
    "require-atomic-updates": "error",
    "require-await": "off",
    "require-jsdoc": "off",
    "require-unicode-regexp": "off",
    "require-yield": "error",
    "rest-spread-spacing": Array [
      "off",
      "never",
    ],
    "semi": Array [
      "off",
      "always",
    ],
    "semi-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": Array [
      "off",
      "last",
    ],
    "sort-imports": Array [
      "off",
      Object {
        "ignoreCase": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": Array [
          "none",
          "all",
          "multiple",
          "single",
        ],
      },
    ],
    "sort-keys": Array [
      "off",
      "asc",
      Object {
        "caseSensitive": false,
        "natural": true,
      },
    ],
    "sort-vars": "off",
    "space-after-function-name": "off",
    "space-after-keywords": "off",
    "space-before-blocks": "off",
    "space-before-function-paren": Array [
      "off",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-before-function-parentheses": "off",
    "space-before-keywords": "off",
    "space-in-brackets": "off",
    "space-in-parens": Array [
      "off",
      "never",
    ],
    "space-infix-ops": "off",
    "space-return-throw-case": "off",
    "space-unary-ops": Array [
      "off",
      Object {
        "nonwords": false,
        "overrides": Object {},
        "words": true,
      },
    ],
    "space-unary-word-ops": "off",
    "spaced-comment": Array [
      "error",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "strict": "error",
    "switch-colon-spacing": Array [
      "off",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": "error",
    "template-curly-spacing": "off",
    "template-tag-spacing": Array [
      "off",
      "never",
    ],
    "unicode-bom": Array [
      "off",
      "never",
    ],
    "use-isnan": "error",
    "valid-jsdoc": "off",
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": "error",
    "wrap-iife": Array [
      "off",
      "outside",
      Object {
        "functionPrototypeMethods": false,
      },
    ],
    "wrap-regex": "off",
    "yield-star-spacing": Array [
      "off",
      "after",
    ],
    "yoda": "error",
  },
  "settings": Object {
    "import/core-modules": Array [],
    "import/extensions": Array [
      ".js",
      ".mjs",
      ".jsx",
    ],
    "import/ignore": Array [
      "node_modules",
      "\\\\.(coffee|scss|css|less|hbs|svg|json)$",
    ],
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".mjs",
          ".js",
          ".json",
        ],
      },
      "typescript": Object {},
    },
  },
}
`;
